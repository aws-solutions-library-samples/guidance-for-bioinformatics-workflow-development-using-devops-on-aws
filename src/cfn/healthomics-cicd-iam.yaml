AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Builds service roles for CodeDeploy, CodePipeline and CodeBuild.This also
  creates an S3 Bucket for artifacts.
Parameters:
  CodeCommitProject:
    Type: String
Resources:
  BuildTrustRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Sid: '1'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
      Path: /
  CodeBuildRolePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: CodeBuildPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: OmicsPolicy
            Effect: Allow
            Action:
              - 'omics:TagResource'
              - 'omics:CreateWorkflow'
              - 'omics:ListWorkflows'
            Resource:
              - !Sub arn:aws:omics:${AWS::Region}:${AWS::AccountId}:workflow/*
          - Sid: CloudWatchLogsPolicy
            Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource:
              - '*'
          - Sid: S3GetObjectPolicy
            Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
            Resource:
              - '*'
          - Sid: S3PutObjectPolicy
            Effect: Allow
            Action:
              - 's3:PutObject'
            Resource:
              - '*'
          - Sid: CodeArtifactPolicy
            Effect: Allow
            Action:
              - 'codeartifact:DisassociateExternalConnection'
              - 'codeartifact:AssociateWithDownstreamRepository'
              - 'codeartifact:GetPackageVersionReadme'
              - 'codeartifact:PutRepositoryPermissionsPolicy'
              - 'codeartifact:DeletePackageVersions'
              - 'codeartifact:ListRepositoriesInDomain'
              - 'codeartifact:DescribePackageVersion'
              - 'codeartifact:GetDomainPermissionsPolicy'
              - 'codeartifact:ListDomains'
              - 'codeartifact:DisposePackageVersions'
              - 'codeartifact:ListPackageVersionDependencies'
              - 'codeartifact:GetAuthorizationToken'
              - 'codeartifact:ListPackages'
              - 'codeartifact:ReadFromRepository'
              - 'codeartifact:GetPackageVersionAsset'
              - 'codeartifact:CreateDomain'
              - 'codeartifact:DescribeRepository'
              - 'codeartifact:ListPackageVersionAssets'
              - 'codeartifact:DescribeDomain'
              - 'codeartifact:AssociateExternalConnection'
              - 'codeartifact:UpdateRepository'
              - 'codeartifact:DeleteDomain'
              - 'codeartifact:CopyPackageVersions'
              - 'codeartifact:PutPackageMetadata'
              - 'codeartifact:DeleteRepository'
              - 'codeartifact:ListRepositories'
              - 'codeartifact:UpdatePackageVersionsStatus'
              - 'codeartifact:GetRepositoryEndpoint'
              - 'codeartifact:CreateRepository'
              - 'codeartifact:PublishPackageVersion'
              - 'codeartifact:GetRepositoryPermissionsPolicy'
              - 'codeartifact:ListPackageVersions'
              - 'codeartifact:PutDomainPermissionsPolicy'
            Resource:
              - '*'
          - Sid: CodeCommitPolicy
            Effect: Allow
            Action:
              - 'codecommit:GitPull'
            Resource:
              - '*'
          - Sid: CodeBuildPolicy
            Effect: Allow
            Action:
              - 'codebuild:CreateReportGroup'
              - 'codebuild:CreateReport'
              - 'codebuild:UpdateReport'
              - 'codebuild:BatchPutTestCases'
              - 'codebuild:BatchPutCodeCoverages'
            Resource:
              - '*'
          - Sid: OtherPolicies
            Effect: Allow
            Action:
              - 'ssm:GetParameters'
              - 'ecr:*'
            Resource:
              - '*'
      Roles:
        - !Ref BuildTrustRole
  DeployTrustRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
        - 'arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS'
      Path: /
  PipelineTrustRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Sid: '1'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
  CodePipelinePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: CodePipelinePolicy
      PolicyDocument:
        Statement:
          - Action:
              - 's3:*'
            Resource:
              - '*'
            Effect: Allow
          - Action:
              - 'codecommit:GetBranch'
              - 'codecommit:GetCommit'
              - 'codecommit:UploadArchive'
              - 'codecommit:GetUploadArchiveStatus'
              - 'codecommit:CancelUploadArchive'
            Resource: '*'
            Effect: Allow
          - Action:
              - 'codepipeline:*'
              - 'iam:ListRoles'
              - 'iam:PassRole'
              - 'codedeploy:CreateDeployment'
              - 'codedeploy:GetApplication'
              - 'codedeploy:GetApplicationRevision'
              - 'codedeploy:GetDeployment'
              - 'codedeploy:GetDeploymentConfig'
              - 'codedeploy:RegisterApplicationRevision'
              - 'lambda:*'
              - 'sns:*'
              - 'ecs:*'
              - 'ecr:*'
            Resource: '*'
            Effect: Allow
          - Action:
              - 'codebuild:StartBuild'
              - 'codebuild:StopBuild'
              - 'codebuild:BatchGet*'
              - 'codebuild:Get*'
              - 'codebuild:List*'
              - 'codecommit:GetBranch'
              - 'codecommit:GetCommit'
              - 'codecommit:GetRepository'
              - 'codecommit:ListBranches'
              - 's3:GetBucketLocation'
              - 's3:ListAllMyBuckets'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'logs:GetLogEvents'
            Effect: Allow
            Resource: 'arn:aws:logs:*:*:log-group:/aws/codebuild/*:log-stream:*'
      Roles:
        - !Ref PipelineTrustRole
  CodePipelineLambdaExecRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Sid: '1'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
  CodePipelineLambdaExecPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: CodePipelineLambdaExecPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource: 'arn:aws:logs:*:*:*'
          - Action:
              - 'codepipeline:PutJobSuccessResult'
              - 'codepipeline:PutJobFailureResult'
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref CodePipelineLambdaExecRole
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: !Join 
        - ''
        - - healthomics-cicd-
          - !Ref 'AWS::Region'
          - '-'
          - !Ref 'AWS::AccountId'
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: HealthOmics-S3Bucket
Outputs:
  CodeBuildRoleArn:
    Value: !GetAtt 
      - BuildTrustRole
      - Arn
    Description: Build role Arn
  CodeDeployRoleArn:
    Value: !GetAtt 
      - DeployTrustRole
      - Arn
    Description: Deploy role Arn
  CodePipelineRoleArn:
    Value: !GetAtt 
      - PipelineTrustRole
      - Arn
    Description: Pipeline role Arn
  LambdaRoleArn:
    Value: !GetAtt 
      - CodePipelineLambdaExecRole
      - Arn
    Description: Lambda Exec role Arn
  S3BucketName:
    Value: !Ref S3Bucket
    Description: Bucket to for storing artifacts
