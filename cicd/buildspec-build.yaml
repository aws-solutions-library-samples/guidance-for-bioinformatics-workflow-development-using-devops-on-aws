version: 0.2

env:
  variables:
    workflow_engine: NEXTFLOW
  shell: bash
  git-credential-helper: yes
phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - export BUILD_DIR_NAME="build"
      - export BASEDIR="${CODEBUILD_SRC_DIR}/$BUILD_DIR_NAME"
      - export PATH=$PATH:$BASEDIR 
      - export WFDIR="${CODEBUILD_SRC_DIR}"
      - export ARTIFACTS_DIR="${BASEDIR}/artifacts"
      - export CICD_SCRIPTS_S3DIR="s3://${TESTBUCKET}/cicd_scripts/"
      - export SCRIPTDIR="${BASEDIR}/scripts"
      - export STAGING_URI="s3://${TESTBUCKET}/${WFNAME}/staging/${CODEBUILD_RESOLVED_SOURCE_VERSION}"
      - printenv
      - mkdir -p $BASEDIR
      - mkdir -p $SCRIPTDIR
      - mkdir -p $ARTIFACTS_DIR
      - aws s3 cp $CICD_SCRIPTS_S3DIR "${SCRIPTDIR}/" --recursive
      - chmod +x $SCRIPTDIR/*.sh
      - bash -x $SCRIPTDIR/buildenv_setup.sh $BASEDIR
  pre_build:
    commands:
      - MANIFESTVER=$(grep "version = " $WFDIR/nextflow.config | cut -d\' -f2)
      - MAJORV=$(echo ${MANIFESTVER} | cut -d. -f1)
      - MINORV=$(echo ${MANIFESTVER} | cut -d. -f2)
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - export CURRBRANCH=$(git rev-parse --abbrev-ref HEAD)
      - git config --global user.email "CodeBuild@example.com"
      - git config --global user.name "CodeBuild"
      
      # stage testing parameter files
      - cd $WFDIR
      - sed -i'.bak' "s|{{staging_uri}}|$STAGING_URI|g" ./test.parameters.json
      - sed -i'.bak' "s|{{region}}|$AWS_REGION|g" ./test.parameters.json
      - aws s3 cp ./test.parameters.json ${STAGING_URI}/test.parameters.json
      - cat ./test.parameters.json
      # these commands are specific to nf-core style nextflow workflows which use samplesheet.csv files
      - sed "s|{{region}}|$AWS_REGION|g" ./samplesheet-template.csv > ./samplesheet.csv
      - aws s3 cp ./samplesheet.csv ${STAGING_URI}/samplesheet.csv
      - cat ./samplesheet.csv

      - echo "Verifying workflow definition is correct..."
      - $BASEDIR/bin/nextflow -c ./nextflow.config run -preview ./main.nf -params-file ./test.parameters.json
      - cat .nextflow.log
  build:
    commands:
      - cd $WFDIR
      - bash -x $SCRIPTDIR/import_images.sh
      - export LASTPATCHVER=$($SCRIPTDIR/get_last_patch.sh)
      - export TAGNAME=$($SCRIPTDIR/get_next_tag_name.sh ${LASTPATCHVER})
      - export NEXTPATCHVER="${TAGNAME##*.}"
      - export ARTIFACTNAME="${WFNAME}-${TAGNAME}"
      - export ARTIFACTFILE="workflow"
      
      - zip -r ${ARTIFACTS_DIR}/${ARTIFACTFILE}.zip ./* -x $BUILD_DIR_NAME/**\* ./work/**\* ./null/**\*
      - aws s3 cp ${ARTIFACTS_DIR}/${ARTIFACTFILE}.zip ${STAGING_URI}/${ARTIFACTFILE}.zip
      - cp $WFDIR/parameter-template.json ${ARTIFACTS_DIR}
      - cp $WFDIR/container_pull_manifest.json ${ARTIFACTS_DIR}
      - cp $WFDIR/test.parameters.json ${ARTIFACTS_DIR}

      - cd ${ARTIFACTS_DIR}
      - echo "Creating Workflow..."
      - TMPWFINFO=$(aws omics create-workflow --definition-uri ${STAGING_URI}/${ARTIFACTFILE}.zip --parameter-template file://parameter-template.json --name ${ARTIFACTNAME} --engine $workflow_engine --tags COMMIT_ID=$CODEBUILD_RESOLVED_SOURCE_VERSION,BUILD_SOURCE=$CODEBUILD_BUILD_ID,STARTED_BY=$CODEBUILD_INITIATOR,BRANCH=$CURRBRANCH,MAJOR_VERSION=$MAJORV,MINOR_VERSION=$MINORV,PATCH_VERSION=$NEXTPATCHVER)
      - echo "${TMPWFINFO}" > ${ARTIFACTS_DIR}/${ARTIFACTFILE}.json
  post_build:
    commands:
      - aws omics list-workflows --type PRIVATE --name ${ARTIFACTNAME}
      - ls -l ${ARTIFACTS_DIR}

artifacts:
  base-directory: ${ARTIFACTS_DIR}
  files:
    - ${ARTIFACTS_DIR}/*
  discard-paths: yes
  name: ${ARTIFACTNAME}-$(date +%Y-%m-%d)-$CODEBUILD_RESOLVED_SOURCE_VERSION